/*!
 * NPM Supervisor v0.2.1
 * https://github.com/muuvmuuv/npm-supervisor
 *
 * Copyright 2019 Marvin Heilemann
 * Released under the MIT license
 *
 * Date: 23.05.2019
 */
import e from"listr";import s from"path";import t from"chalk";import o from"execa";import r from"read-pkg";import n from"semver";var i=function(){return(i=Object.assign||function(e){for(var s,t=1,o=arguments.length;t<o;t++)for(var r in s=arguments[t])Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r]);return e}).apply(this,arguments)};function a(e,s){var t,o,r,n,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return n={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(n[Symbol.iterator]=function(){return this}),n;function a(n){return function(a){return function(n){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,o&&(r=2&n[0]?o.return:n[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,n[1])).done)return r;switch(o=0,r&&(n=[2&n[0],r.value]),n[0]){case 0:case 1:r=n;break;case 4:return i.label++,{value:n[1],done:!1};case 5:i.label++,o=n[1],n=[0];continue;case 7:n=i.ops.pop(),i.trys.pop();continue;default:if(!(r=(r=i.trys).length>0&&r[r.length-1])&&(6===n[0]||2===n[0])){i=0;continue}if(3===n[0]&&(!r||n[1]>r[0]&&n[1]<r[3])){i.label=n[1];break}if(6===n[0]&&i.label<r[1]){i.label=r[1],r=n;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(n);break}r[2]&&i.ops.pop(),i.trys.pop();continue}n=s.call(e,i)}catch(e){n=[6,e],o=0}finally{t=r=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,a])}}}var c=function(){function c(s){this.results={};var t={debug:!1,cwd:process.cwd(),ignoreLocal:!0,silent:!0};this.options=i({},t,s),this.tasks=new e({renderer:this.options.debug?"verbose":this.options.silent?"silent":"default",concurrent:!1,exitOnError:!1}),this.options.ignoreLocal&&this.ignoreLocal(),this.options.engines||this.findEngines(),this.buildTasks()}return c.prototype.run=function(){return e=this,s=void 0,o=function(){return a(this,function(e){switch(e.label){case 0:if(!this.tasks)throw new Error("No tasks found!");return[4,this.tasks.run()];case 1:return e.sent(),[2,this.results]}})},new((t=void 0)||(t=Promise))(function(r,n){function i(e){try{c(o.next(e))}catch(e){n(e)}}function a(e){try{c(o.throw(e))}catch(e){n(e)}}function c(e){e.done?r(e.value):new t(function(s){s(e.value)}).then(i,a)}c((o=o.apply(e,s||[])).next())});var e,s,t,o},c.prototype.ignoreLocal=function(){var e=process.env.PATH;if(console.log(e),e){var t=s.resolve(this.options.cwd,"node_modules",".bin");console.log(),console.log(t),console.log();var o=new RegExp(":?"+t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")+":?");console.log(o.source),console.log();var r=e.replace(o,":");console.log(r),console.log(),process.env.PATH=r}},c.prototype.buildTasks=function(){var e=this,s=this.options.engines;if(!s)throw new Error("No engines found!");Object.keys(s).forEach(function(t){var o=s[t];e.addTask(t,o)})},c.prototype.addTask=function(s,o){var r=this;this.results[s]={success:!1,tasks:[]},this.tasks.add({title:"Checking engine: "+t.green(s)+" ("+t.dim(o)+")",task:function(){return new e([{title:"Check availability",task:function(e,t){return r.checkAvailability(e,t,s)}},{title:"Get command version",task:function(e,t){return r.getVersion(e,t,s)}},{title:"Validate range",task:function(e,t){return r.validateVersion(e,t,s,o)}},{title:"Check version against range",task:function(e,t){return r.checkVersion(e,t,s,o)}},{title:t.dim("Update results"),task:function(){return r.results[s].success=!0,Promise.resolve()}}],{exitOnError:!0})}})},c.prototype.findEngines=function(){var e=r.sync({cwd:this.options.cwd});if(!e)throw new Error("No package.json found!");this.options.engines=e.engines},c.prototype.checkAvailability=function(e,s,t){try{var r=o.sync("command",["-v",t],{preferLocal:!1}).stdout;return this.options.debug&&console.log("Command:",r),r.includes(t)?(this.results[t].tasks.push({task:s,success:!0,message:"Executable found!",data:r}),Promise.resolve("Executable found!")):(this.results[t].tasks.push({task:s,success:!1,message:"Executable not found!",data:r}),Promise.reject(new Error("Executable not found!")))}catch(e){return this.options.debug&&console.log(e.message),this.results[t].tasks.push({task:s,success:!1,message:"Error executing program!",data:e}),Promise.reject(new Error("Error executing program!"))}},c.prototype.getVersion=function(e,s,t){try{var r=o.sync(t,["--version"],{preferLocal:!1}).stdout,i=n.coerce(r);if(this.options.debug&&(console.log("Version:",r),console.log("Normalized:",i?i.version:null)),i){var a=n.valid(i.version);if(a)return e.version=a,this.results[t].tasks.push({task:s,success:!0,message:"Got a valid version",data:{version:r,normalized:i,validVersion:a}}),Promise.resolve()}return this.results[t].tasks.push({task:s,success:!1,message:"No valid version found! Please fill in an issue on GitHub.",data:{stdout:r,normalized:i}}),Promise.reject(new Error("No valid version found! Please fill in an issue on GitHub."))}catch(e){return this.options.debug&&console.log(e.message),this.results[t].tasks.push({task:s,success:!1,message:"Error fetching version!",data:e}),Promise.reject(new Error("Error fetching version!"))}},c.prototype.validateVersion=function(e,s,t,o){var r=n.validRange(o);return this.options.debug&&(console.log("Range:",o),console.log("Valid:",r)),r?(this.results[t].tasks.push({task:s,success:!0,message:"This version is valid!",data:{range:o}}),Promise.resolve("This version is valid!")):(this.results[t].tasks.push({task:s,success:!1,message:"This is not a valid version ("+o+")!",data:{range:o}}),Promise.reject(new Error("This is not a valid version ("+o+")!")))},c.prototype.checkVersion=function(e,s,t,o){var r=e.version,i=n.satisfies(r,o);return this.options.debug&&(console.log("Version:",r),console.log("Range:",o),console.log("Satisfies:",i)),i?(this.results[t].tasks.push({task:s,success:!0,message:"Yeah, your program version satisfies the required range!",data:{version:r,range:o,satisfies:i}}),Promise.resolve("Yeah, your program version satisfies the required range!")):(this.results[t].tasks.push({task:s,success:!1,message:"Ooh, the required range ("+o+") does not satisfies your program version ("+r+")!",data:{version:r,range:o,satisfies:i}}),Promise.reject(new Error("Ooh, the required range ("+o+") does not satisfies your program version ("+r+")!")))},c}();export{c as Supervisor};
