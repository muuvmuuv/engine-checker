/*!
 * NPM Supervisor v0.2.0
 * https://github.com/muuvmuuv/npm-supervisor
 *
 * Copyright 2019 Marvin Heilemann
 * Released under the MIT license
 *
 * Date: 23.05.2019
 */
"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var s=e(require("listr")),t=e(require("path")),r=e(require("chalk")),n=e(require("execa")),o=e(require("read-pkg")),i=e(require("semver")),a=function(){return(a=Object.assign||function(e){for(var s,t=1,r=arguments.length;t<r;t++)for(var n in s=arguments[t])Object.prototype.hasOwnProperty.call(s,n)&&(e[n]=s[n]);return e}).apply(this,arguments)};function u(e,s){var t,r,n,o,i={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,r&&(n=2&o[0]?r.return:o[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,o[1])).done)return n;switch(r=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!(n=(n=i.trys).length>0&&n[n.length-1])&&(6===o[0]||2===o[0])){i=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){i.label=o[1];break}if(6===o[0]&&i.label<n[1]){i.label=n[1],n=o;break}if(n&&i.label<n[2]){i.label=n[2],i.ops.push(o);break}n[2]&&i.ops.pop(),i.trys.pop();continue}o=s.call(e,i)}catch(e){o=[6,e],r=0}finally{t=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}}var c=function(){function e(e){this.results={};var t={debug:!1,cwd:process.cwd(),ignoreLocal:!0,silent:!0};this.options=a({},t,e),this.tasks=new s({renderer:this.options.debug?"verbose":this.options.silent?"silent":"default",concurrent:!1,exitOnError:!1}),this.options.ignoreLocal&&this.ignoreLocal(),this.options.engines||this.findEngines(),this.buildTasks()}return e.prototype.run=function(){return e=this,s=void 0,r=function(){return u(this,function(e){switch(e.label){case 0:if(!this.tasks)throw new Error("No tasks found!");return[4,this.tasks.run()];case 1:return e.sent(),[2,this.results]}})},new((t=void 0)||(t=Promise))(function(n,o){function i(e){try{u(r.next(e))}catch(e){o(e)}}function a(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){e.done?n(e.value):new t(function(s){s(e.value)}).then(i,a)}u((r=r.apply(e,s||[])).next())});var e,s,t,r},e.prototype.ignoreLocal=function(){var e=process.env.PATH;if(e){var s=t.resolve(this.options.cwd,"node_modules",".bin"),r=new RegExp(":?"+s.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")+":?","i"),n=e.replace(r,"");process.env.PATH=n}},e.prototype.buildTasks=function(){var e=this,s=this.options.engines;if(!s)throw new Error("No engines found!");Object.keys(s).forEach(function(t){var r=s[t];e.addTask(t,r)})},e.prototype.addTask=function(e,t){var n=this;this.results[e]={success:!1,tasks:[]},this.tasks.add({title:"Checking engine: "+r.green(e)+" ("+r.dim(t)+")",task:function(){return new s([{title:"Check availability",task:function(s,t){return n.checkAvailability(s,t,e)}},{title:"Get command version",task:function(s,t){return n.getVersion(s,t,e)}},{title:"Validate range",task:function(s,r){return n.validateVersion(s,r,e,t)}},{title:"Check version against range",task:function(s,r){return n.checkVersion(s,r,e,t)}},{title:r.dim("Update results"),task:function(){return n.results[e].success=!0,Promise.resolve()}}],{exitOnError:!0})}})},e.prototype.findEngines=function(){var e=o.sync({cwd:this.options.cwd});if(!e)throw new Error("No package.json found!");this.options.engines=e.engines},e.prototype.checkAvailability=function(e,s,t){try{var r=n.sync("command",["-v",t],{preferLocal:!1}).stdout;return this.options.debug&&console.log("Command:",r),r.includes(t)?(this.results[t].tasks.push({task:s,success:!0,message:"Executable found!",data:r}),Promise.resolve("Executable found!")):(this.results[t].tasks.push({task:s,success:!1,message:"Executable not found!",data:r}),Promise.reject(new Error("Executable not found!")))}catch(e){return this.options.debug&&console.log(e.message),this.results[t].tasks.push({task:s,success:!1,message:"Error executing program!",data:e}),Promise.reject(new Error("Error executing program!"))}},e.prototype.getVersion=function(e,s,t){try{var r=n.sync(t,["--version"],{preferLocal:!1}).stdout,o=i.coerce(r);if(this.options.debug&&(console.log("Version:",r),console.log("Normalized:",o?o.version:null)),o){var a=i.valid(o.version);if(a)return e.version=a,this.results[t].tasks.push({task:s,success:!0,message:"Got a valid version",data:{version:r,normalized:o,validVersion:a}}),Promise.resolve()}return this.results[t].tasks.push({task:s,success:!1,message:"No valid version found! Please fill in an issue on GitHub.",data:{stdout:r,normalized:o}}),Promise.reject(new Error("No valid version found! Please fill in an issue on GitHub."))}catch(e){return this.options.debug&&console.log(e.message),this.results[t].tasks.push({task:s,success:!1,message:"Error fetching version!",data:e}),Promise.reject(new Error("Error fetching version!"))}},e.prototype.validateVersion=function(e,s,t,r){var n=i.validRange(r);return this.options.debug&&(console.log("Range:",r),console.log("Valid:",n)),n?(this.results[t].tasks.push({task:s,success:!0,message:"This version is valid!",data:{range:r}}),Promise.resolve("This version is valid!")):(this.results[t].tasks.push({task:s,success:!1,message:"This is not a valid version ("+r+")!",data:{range:r}}),Promise.reject(new Error("This is not a valid version ("+r+")!")))},e.prototype.checkVersion=function(e,s,t,r){var n=e.version,o=i.satisfies(n,r);return this.options.debug&&(console.log("Version:",n),console.log("Range:",r),console.log("Satisfies:",o)),o?(this.results[t].tasks.push({task:s,success:!0,message:"Yeah, your program version satisfies the required range!",data:{version:n,range:r,satisfies:o}}),Promise.resolve("Yeah, your program version satisfies the required range!")):(this.results[t].tasks.push({task:s,success:!1,message:"Ooh, the required range ("+r+") does not satisfies your program version ("+n+")!",data:{version:n,range:r,satisfies:o}}),Promise.reject(new Error("Ooh, the required range ("+r+") does not satisfies your program version ("+n+")!")))},e}();exports.Supervisor=c;
