#!/usr/bin/env node
"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var s=e(require("meow")),t=e(require("chalk")),n=e(require("boxen")),r=e(require("util")),o=e(require("listr")),i=e(require("path")),a=e(require("execa")),u=e(require("semver")),c=e(require("cosmiconfig")),l=function(){return(l=Object.assign||function(e){for(var s,t=1,n=arguments.length;t<n;t++)for(var r in s=arguments[t])Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r]);return e}).apply(this,arguments)};function h(e,s,t,n){return new(t||(t=Promise))(function(r,o){function i(e){try{u(n.next(e))}catch(e){o(e)}}function a(e){try{u(n.throw(e))}catch(e){o(e)}}function u(e){e.done?r(e.value):new t(function(s){s(e.value)}).then(i,a)}u((n=n.apply(e,s||[])).next())})}function d(e,s){var t,n,r,o,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,n&&(r=2&o[0]?n.return:o[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,o[1])).done)return r;switch(n=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,n=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!(r=(r=i.trys).length>0&&r[r.length-1])&&(6===o[0]||2===o[0])){i=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){i.label=o[1];break}if(6===o[0]&&i.label<r[1]){i.label=r[1],r=o;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(o);break}r[2]&&i.ops.pop(),i.trys.pop();continue}o=s.call(e,i)}catch(e){o=[6,e],n=0}finally{t=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}}function g(e){return new Promise(function(s){return setTimeout(s,e)})}var f=function(e,s){var t={},n=s.match(/([a-z]+)(.*)/g);if(!n)throw new Error("We had a problem finding matches in this file");return n.forEach(function(e,s){var n=/([a-z]+)(.*)/.exec(e);if(!n)throw new Error("There was an error in your config file on line: "+s);var r=n[1],o=n[2].replace(/\s/,"");t[r]=o}),t},p=function(){function e(e){this.results={},this.pillow=50;var s={debug:!1,cwd:process.cwd(),ignoreLocal:!0,silent:!0,engines:{}};this.options=l({},s,e);var n=c("engines",{searchPlaces:["engines","engines.yaml","package.json"],loaders:{noExt:{sync:f}}}).searchSync();n&&(this.options.debug&&console.log("Config",t.dim(n.filepath),"\n"),this.options.engines=n.config),this.tasks=new o({renderer:this.options.debug?"verbose":this.options.silent?"silent":"default",concurrent:!1,exitOnError:!1}),this.options.ignoreLocal&&this.ignoreLocal(),this.buildTasks()}return e.prototype.run=function(){return h(this,void 0,void 0,function(){return d(this,function(e){switch(e.label){case 0:if(!this.tasks)throw new Error("No tasks found!");return[4,this.tasks.run()];case 1:return e.sent(),[2,this.results]}})})},e.prototype.ignoreLocal=function(){var e=process.env.PATH;if(e){var s=i.resolve(this.options.cwd,"node_modules",".bin"),t=new RegExp(":?"+s.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")+":?","i"),n=e.replace(t,":");process.env.PATH=n}},e.prototype.buildTasks=function(){var e=this,s=this.options.engines;if(!s)throw new Error("No engines found!");Object.keys(s).forEach(function(t){var n=s[t];e.addTask(t,n)})},e.prototype.addTask=function(e,s){var n=this;this.results[e]={success:!1,tasks:[]},this.tasks.add({title:"Checking engine: "+t.green(e)+" ("+t.dim(s)+")",task:function(){return new o([{title:"Check availability",task:function(s,t){return n.checkAvailability(s,t,e)}},{title:"Get command version",task:function(s,t){return n.getVersion(s,t,e)}},{title:"Validate range",task:function(t,r){return n.validateVersion(t,r,e,s)}},{title:"Check version against range",task:function(t,r){return n.checkVersion(t,r,e,s)}},{title:t.dim("Update results"),task:function(){return n.results[e].success=!0,Promise.resolve()}}],{exitOnError:!0})}})},e.prototype.checkAvailability=function(e,s,t){return h(this,void 0,void 0,function(){var e,n;return d(this,function(r){switch(r.label){case 0:return r.trys.push([0,3,,4]),[4,a("command",["-v",t],{preferLocal:!1})];case 1:return e=r.sent().stdout,[4,g(this.pillow)];case 2:return r.sent(),this.options.debug&&console.log("Command:",e),e.includes(t)?(this.results[t].tasks.push({task:s,success:!0,message:"Executable found!",data:e}),[2,Promise.resolve("Executable found!")]):(this.results[t].tasks.push({task:s,success:!1,message:"Executable not found!",data:e}),[2,Promise.reject(new Error("Executable not found!"))]);case 3:return n=r.sent(),this.options.debug&&console.log(n.message),this.results[t].tasks.push({task:s,success:!1,message:"Error executing program!",data:n}),[2,Promise.reject(new Error("Error executing program!"))];case 4:return[2]}})})},e.prototype.getVersion=function(e,s,t){return h(this,void 0,void 0,function(){var n,r,o,i;return d(this,function(c){switch(c.label){case 0:return c.trys.push([0,3,,4]),[4,a(t,["--version"],{preferLocal:!1})];case 1:return n=c.sent().stdout,[4,g(this.pillow)];case 2:return c.sent(),r=u.coerce(n),this.options.debug&&(console.log("Version:",n),console.log("Normalized:",r?r.version:null)),r&&(o=u.valid(r.version))?(e.version=o,this.results[t].tasks.push({task:s,success:!0,message:"Got a valid version",data:{version:n,normalized:r,validVersion:o}}),[2,Promise.resolve()]):(this.results[t].tasks.push({task:s,success:!1,message:"No valid version found! Please fill in an issue on GitHub.",data:{stdout:n,normalized:r}}),[2,Promise.reject(new Error("No valid version found! Please fill in an issue on GitHub."))]);case 3:return i=c.sent(),this.options.debug&&console.log(i.message),this.results[t].tasks.push({task:s,success:!1,message:"Error fetching version!",data:i}),[2,Promise.reject(new Error("Error fetching version!"))];case 4:return[2]}})})},e.prototype.validateVersion=function(e,s,t,n){return h(this,void 0,void 0,function(){var e;return d(this,function(r){switch(r.label){case 0:return[4,u.validRange(n)];case 1:return e=r.sent(),[4,g(this.pillow)];case 2:return r.sent(),this.options.debug&&(console.log("Range:",n),console.log("Valid:",e)),e?(this.results[t].tasks.push({task:s,success:!0,message:"This version is valid!",data:{range:n}}),[2,Promise.resolve("This version is valid!")]):(this.results[t].tasks.push({task:s,success:!1,message:"This is not a valid version ("+n+")!",data:{range:n}}),[2,Promise.reject(new Error("This is not a valid version ("+n+")!"))])}})})},e.prototype.checkVersion=function(e,s,t,n){var r=e.version;return h(this,void 0,void 0,function(){var e;return d(this,function(o){switch(o.label){case 0:return[4,u.satisfies(r,n)];case 1:return e=o.sent(),[4,g(this.pillow)];case 2:return o.sent(),this.options.debug&&(console.log("Version:",r),console.log("Range:",n),console.log("Satisfies:",e)),e?(this.results[t].tasks.push({task:s,success:!0,message:"Yeah, your program version satisfies the required range!",data:{version:r,range:n,satisfies:e}}),[2,Promise.resolve("Yeah, your program version satisfies the required range!")]):(this.results[t].tasks.push({task:s,success:!1,message:"Ooh, the required range ("+n+") does not satisfies your program version ("+r+")!",data:{version:r,range:n,satisfies:e}}),[2,Promise.reject(new Error("Ooh, the required range ("+n+") does not satisfies your program version ("+r+")!"))])}})})},e}();var v=s("\n    Usage\n    $ engine-checker <directory>\n\n    Options\n    --ignoreLocal, -i  Ignore local installed node modules (true)\n\n    --debug     Debug program\n    --version   Show version\n    --help      Show help\n",{flags:{debug:{type:"boolean",default:!1},ignoreLocal:{type:"boolean",alias:"i",default:!0}}}),m=v.flags,b=m.debug,k=m.ignoreLocal,w=v.input[0]||process.cwd();console.log(n(t.green("Engine Checker")+" ("+t.dim("2.0.0")+")",{padding:{top:1,bottom:1,right:8,left:8},margin:{top:0,bottom:0,right:3,left:3},align:"center",borderColor:"white",dimBorder:!0})+"\n"),new p({silent:!1,ignoreLocal:k,cwd:w,debug:b}).run().then(function(e){Object.values(e).every(function(e){return!0===e.success})?console.log("\n    "+t.green("Yeah!")+"\n    You are ready to go. All engines are compatible\n    with you system environment.\n      "):console.log("\n    "+t.red("Oh, no!")+"\n    Seems like some engines does not satisfies or not\n    exists. You may check them and install the correct\n    version before using this project.\n      "),b&&(console.log(),Object.keys(e).forEach(function(s){console.log(t.bold(s.toUpperCase())),console.log(r.inspect(e[s],{showHidden:!1,depth:3,colors:!0})),console.log()}))});
